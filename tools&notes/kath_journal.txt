09-15
- Created a new git repository
- Added the README template
- Created the folders for organisation
- Created the note files
- Added the base Makefile (to be modified by Élodie)
- Added the base minishell.h file (to be modified and even separated between multiple .h for exec, parsing and builtins)

Notes:
- Rule: do not put any headers in the .c files to avoid conflict
- Rule: add the date before each commit?
- At the end of the project, DO NOT PUSH the tools&notes section

To-do to add:
- Create a team in the intra
- Tokenisation 
- Separate the .h between multiple ones for each part of the project
- Signals function

Questions:
- Whose Libft do we take?

09-18
- Meeting to discuss the next steps, to do today:
	- Add notes to the files
	- Study readline and take notes to discuss tomorrow
	- Correct Élodie's pipex
- Approved Élodie's pull requests
- Added the notes of the day

09-19
- Separated the .h between multiple files

Notes: 
Video: 228 Writing Custom Shell or CLI via Readline Library in C or PHP
- We could use scanf to get input from the terminal, but we would not be able to get the history. The readline library does that for us.
- Install if not installed:
	sudo apt-get install libreadline6 libreadline6-dev 
	(might differ since it could have been updated)
- include readline/readline.h && readline/history.h

09-20
- Meeting to discuss how we could do the main structure of the project + tokenisation

Notes:
- Add clear history si on veux clear (commande clear)

To-do to add:
- Deal with the history (avec les touches haut et bas, redisplay et replace) ---- juste remplacer quand on fait tab?
- Gérer les absolute path (EXEC/GATHER INFORMATION)
- Gérer les charactères délimiteurs
- Gérer les // $$ 
- Dans la tokenisation, gérer les ````
- Ajouter le sujet dans les fichiers
- Gérer les executables et ce qui vient après

Questions:
- Find out how to hide readline leaks?
- How to organize structure

Tomorrow:
- Prioriser la to-do

09-21
-

Notes:
- Shower thoughts:
	Separate the project into chunks that we can go through together one by one by separating them into tasks, those chunks can be the weekly focus
	Week 1 (this week) - Main loop (readline)
	Week 2 - Signals 
	Week 3 - Tokenisation (learn about how tokenisation work and how it's used, decide on how to do the struct)
	Week 4 - Main parsing (here_doc, errors, etc.)
	Week 5 - Execution (absolute path && builtins)
	Week 6 - Builtins 
	Week 7 - Tests tests tests!!